{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/FormButton/FormButton.module.css","Components/Filter/Filter.module.css","Components/FormButton/FormButton.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","FormButton","type","disabled","onClick","label","className","s","formBtn","ContactList","contacts","removeContact","list","map","id","name","number","listItem","listName","listNumber","ContactForm","state","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","uuid","props","onSubmit","console","log","reset","this","form","formItem","formInput","onChange","pattern","title","required","Component","Filter","filterInput","App","filter","isInContact","find","contact","toLowerCase","addContact","alert","getFilteredContact","includes","handleChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06ac42e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ContactForm_formInput__2VXRu\",\"formItem\":\"ContactForm_formItem__31vzM\",\"formButton\":\"ContactForm_formButton__fthjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2cE9S\",\"listName\":\"ContactList_listName__33qvU\",\"listItem\":\"ContactList_listItem__2qeAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBtn\":\"FormButton_formBtn__1jcFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__AdX91\"};","import React from \"react\";\r\nimport s from \"./FormButton.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FormButton = ({ type = \"button\", disabled = false, onClick, label }) => {\r\n  return (\r\n    <button label=\"Delete\" className={s.formBtn} type={type} disabled={disabled} onClick={onClick}>\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default FormButton;\r\n\r\nFormButton.propTypes = {\r\n  type: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n  label: PropTypes.string,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport FormButton from \"./../FormButton/FormButton\";\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.listItem}>\r\n          <span className={s.listName}>{name}</span>\r\n          <span className={s.listNumber}>{number}</span>\r\n          <FormButton label=\"Remove\" onClick={() => removeContact(id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  removeContact: PropTypes.func,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport FormButton from \"../FormButton/FormButton\";\r\nimport { v1 as uuid } from \"uuid\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const contacts = {\r\n      id: uuid(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.onSubmit(contacts);\r\n    console.log(this.state);\r\n\r\n    this.reset();\r\n  };\r\n  reset() {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label className={s.formItem}>\r\n            Name\r\n            <input\r\n              className={s.formInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n          <label className={s.formItem}>\r\n            Number\r\n            <input\r\n              className={s.formInput}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              value={this.state.number}\r\n              onChange={this.handleInputChange}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <FormButton type=\"submit\" className={s.formBtn} label=\"Add contact\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport s from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ onChange }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name:\r\n        <input className={s.filterInput} type=\"text\" name=\"filter\" onChange={onChange} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport Filter from \"./Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  isInContact = (name) => {\n    const { contacts } = this.state;\n    return contacts.find((contact) => contact.name.toLowerCase() === name.toLowerCase());\n  };\n\n  addContact = (contact) => {\n    if (!this.isInContact(contact.name)) {\n      this.setState(({ contacts }) => ({\n        contacts: [contact, ...contacts],\n      }));\n    } else {\n      alert(`${contact.name} is already in contact)`);\n    }\n  };\n\n  getFilteredContact = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  removeContact = (id) => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter onChange={this.handleChange} />\n        <ContactList contacts={this.getFilteredContact()} removeContact={this.removeContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}